Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

--edf=/Applications/Microchip/xc8/v1.37/dat/en_msgs.txt -cs -h+main.sym \
  --cmf=main.cmf -z -Q16F636 -o/tmp/xctQ6CnDe -Mmain.map -ver=XC8 \
  -ASTACK=039h-06fh -pstack=STACK -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0BFh \
  -ARAM=020h-06Fh,0A0h-0BFh -AABS1=020h-07Fh,0A0h-0BFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-016Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k startup.obj main.obj 

Object code version is 3.11

Machine type is 16F636



                Name                               Link     Load   Length Selector   Space Scale
startup.obj     end_init                             10       10        1        8       0
                reset_vec                             0        0        1        0       0
main.obj        cinit                                11       11        A        8       0
                intentry                              4        4        C        8       0
                text14                              266      266       2B        8       0
                text13                              300      300        8        8       0
                text12                              2E2      2E2        E        8       0
                text11                              30E      30E        6        8       0
                text10                              239      239       2D        8       0
                text9                               2D4      2D4        E        8       0
                text8                               2F8      2F8        8        8       0
                text7                               314      314        5        8       0
                text6                               1FE      1FE       3B        8       0
                text5                               2C0      2C0       14        8       0
                text4                               291      291       18        8       0
                text3                                1B       1B      13C        8       0
                text2                               2A9      2A9       17        8       0
                text1                               308      308        6        8       0
                maintext                            157      157       A7        8       0
                cstackBANK0                          20       20        D       20       1
                cstackCOMMON                         70       70        6       70       1
                clrtext                             2F0      2F0        8        8       0
                bssBANK0                             2D       2D        C       20       1
                bssCOMMON                            76       76        3       70       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             10       10        1         0
                cinit                                11       11        A         0
                intentry                              4        4        C         0
                reset_vec                             0        0        1         0
                text14                              266      266       2B         0
                text13                              300      300        8         0
                text12                              2E2      2E2        E         0
                text11                              30E      30E        6         0
                text10                              239      239       2D         0
                text9                               2D4      2D4        E         0
                text8                               2F8      2F8        8         0
                text7                               314      314        5         0
                text6                               1FE      1FE       3B         0
                text5                               2C0      2C0       14         0
                text4                               291      291       18         0
                text3                                1B       1B      13C         0
                text2                               2A9      2A9       17         0
                text1                               308      308        6         0
                maintext                            157      157       A7         0
                clrtext                             2F0      2F0        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            76       76        3         1

        CLASS   BANK0          
                cstackBANK0                          20       20        D         1
                bssBANK0                             2D       2D        C         1

        CLASS   BANK1          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1
                abs_s1                               C0       C0        1         1
                abs_s1                               C3       C3        1         1
                abs_s1                              604      604        0         1
                abs_s1                              605      605        0         1
                abs_s1                              606      606        0         1
                abs_s1                              607      607        0         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          

        CLASS   BANK2          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000315  000319         8       0  CODE        2
                cstackBANK0                    000020  000019  000039        20       1  BANK0       1
                cstackCOMMON                   000070  000009  000079        70       1  COMMON      1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            039-06F            37           1
        BANK1            0A0-0BF            20           1
        CODE             001-003             3           2
                         319-7FF           4E7
        COMMON           079-07D             5           1
        CONFIG           2007-2007             1           2
        CONST            001-003             3           2
                         319-7FF           100
        EEDATA           2100-21FF           100           2
        ENTRY            001-003             3           2
                         319-7FF           100
        IDLOC            2000-2003             4           2
        RAM              039-06F            37           1
                         0A0-0BF            20
        SFR0             000-01F            20           1
        SFR1             080-09F            20           1
        SFR2             100-16F            70           1
        SFR3             180-1EF            70           1
        STACK            039-06F            37           1
        STRCODE          001-003             3           2
                         319-7FF           4E7
        STRING           001-003             3           2
                         319-7FF           100

                                  Symbol Table

OLED_spi_sendchar@c            cstackCOMMON 075
OLED_up_header@FSPI_FILE       (abs)        0C3
OLED_up_header@FSPI_STATUS     (abs)        0C3
OLED_up_header@NEX4_7SEG_SEL   (abs)        019
OLED_up_header@NEX4_PMOD_B     (abs)        0C0
OLED_up_header@NEX4_RGBL0_RED  (abs)        062
OLED_up_header@NEX4_RGBL1_RED  (abs)        065
OLED_up_header@OLED_DC         (abs)        604
OLED_up_header@OLED_RES        (abs)        605
OLED_up_header@OLED_SPI_BSY    (abs)        0B0
OLED_up_header@OLED_SPI_FILE   (abs)        017
OLED_up_header@OLED_SPI_STATUS (abs)        016
OLED_up_header@OLED_VBATC      (abs)        606
OLED_up_header@OLED_VDDC       (abs)        607
OLED_up_header@UART_RXR        (abs)        011
OLED_up_header@UART_RXRDY      (abs)        080
OLED_up_header@UART_TXBSY      (abs)        081
OLED_up_header@UART_TXR        (abs)        011
_Disp_idx                      bssCOMMON    076
_Display                       bssBANK0     02D
_FSPI_FILE                     (abs)        0C3
_FSPI_STATUS                   (abs)        0C3
_GIE                           (abs)        05F
_INTCON                        (abs)        00B
_IT                            text14       266
_NEX4_7SEG_SEL                 (abs)        019
_NEX4_7SEG_VAL                 (abs)        018
_NEX4_PMOD_B                   (abs)        0C0
_OLED_DC                       (abs)        604
_OLED_RES                      (abs)        605
_OLED_VBATC                    (abs)        606
_OLED_VDDC                     (abs)        607
_OLED_spi_sendchar             text13       300
_OPTION_REG                    (abs)        081
_RAM_MODE                      (abs)        068
_T0IE                          (abs)        05D
_T0IF                          (abs)        05A
_UART_RXR                      (abs)        011
_UART_RXRDY                    (abs)        080
__Habs1                        abs1         000
__Hbank0                       bank0        000
__Hbank1                       bank1        000
__Hbank2                       bank2        000
__Hbank3                       bank3        000
__HbssBANK0                    bssBANK0     000
__HbssCOMMON                   bssCOMMON    000
__Hcinit                       cinit        01B
__Hclrtext                     clrtext      000
__Hcode                        code         000
__Hcommon                      common       000
__Hconfig                      config       000
__HcstackBANK0                 cstackBANK0  000
__HcstackCOMMON                cstackCOMMON 000
__Heeprom_data                 eeprom_data  000
__Hend_init                    end_init     011
__Hfunctab                     functab      000
__Hidloc                       idloc        000
__Hinit                        init         010
__Hintentry                    intentry     010
__Hmaintext                    maintext     000
__Hpowerup                     powerup      000
__Hram                         ram          000
__Hreset_vec                   reset_vec    001
__Hsfr0                        sfr0         000
__Hsfr1                        sfr1         000
__Hsfr2                        sfr2         000
__Hsfr3                        sfr3         000
__Hspace_0                     (abs)        319
__Hspace_1                     (abs)        079
__Hspace_2                     (abs)        000
__Hspace_3                     (abs)        000
__Hstack                       stack        000
__Hstrings                     strings      000
__Htext                        text         000
__Labs1                        abs1         000
__Lbank0                       bank0        000
__Lbank1                       bank1        000
__Lbank2                       bank2        000
__Lbank3                       bank3        000
__LbssBANK0                    bssBANK0     000
__LbssCOMMON                   bssCOMMON    000
__Lcinit                       cinit        011
__Lclrtext                     clrtext      000
__Lcode                        code         000
__Lcommon                      common       000
__Lconfig                      config       000
__LcstackBANK0                 cstackBANK0  000
__LcstackCOMMON                cstackCOMMON 000
__Leeprom_data                 eeprom_data  000
__Lend_init                    end_init     010
__Lfunctab                     functab      000
__Lidloc                       idloc        000
__Linit                        init         010
__Lintentry                    intentry     004
__Lmaintext                    maintext     000
__Lpowerup                     powerup      000
__Lram                         ram          000
__Lreset_vec                   reset_vec    000
__Lsfr0                        sfr0         000
__Lsfr1                        sfr1         000
__Lsfr2                        sfr2         000
__Lsfr3                        sfr3         000
__Lspace_0                     (abs)        000
__Lspace_1                     (abs)        000
__Lspace_2                     (abs)        000
__Lspace_3                     (abs)        000
__Lstack                       stack        000
__Lstrings                     strings      000
__Ltext                        text         000
__S0                           (abs)        319
__S1                           (abs)        079
__S2                           (abs)        000
__S3                           (abs)        000
___int_sp                      stack        000
___latbits                     (abs)        000
___sp                          stack        000
__end_of_IT                    text14       291
__end_of_OLED_spi_sendchar     text13       308
__end_of__initialization       cinit        019
__end_of_clearScreen           text12       2F0
__end_of_getbyte               text9        2E2
__end_of_gethex                text10       266
__end_of_init                  text6        239
__end_of_init_OLED             text3        157
__end_of_main                  maintext     1FE
__end_of_recv_char             text11       314
__end_of_send_char             text8        300
__end_of_send_nl               text7        319
__end_of_setPixelAddr          text2        2C0
__end_of_setPixelAddrTo0       text1        30E
__end_of_wait_ms               text4        2A9
__end_of_wait_us               text5        2D4
__initialization               cinit        011
__pbssBANK0                    bssBANK0     02D
__pbssCOMMON                   bssCOMMON    076
__pcstackBANK0                 cstackBANK0  020
__pcstackCOMMON                cstackCOMMON 070
__pintentry                    intentry     004
__pmaintext                    maintext     157
__ptext0                       text0        000
__ptext1                       text1        308
__ptext10                      text10       239
__ptext11                      text11       30E
__ptext12                      text12       2E2
__ptext13                      text13       300
__ptext14                      text14       266
__ptext2                       text2        2A9
__ptext3                       text3        01B
__ptext4                       text4        291
__ptext5                       text5        2C0
__ptext6                       text6        1FE
__ptext7                       text7        314
__ptext8                       text8        2F8
__ptext9                       text9        2D4
__size_of_IT                   (abs)        000
__size_of_OLED_spi_sendchar    (abs)        000
__size_of_clearScreen          (abs)        000
__size_of_getbyte              (abs)        000
__size_of_gethex               (abs)        000
__size_of_init                 (abs)        000
__size_of_init_OLED            (abs)        000
__size_of_main                 (abs)        000
__size_of_recv_char            (abs)        000
__size_of_send_char            (abs)        000
__size_of_send_nl              (abs)        000
__size_of_setPixelAddr         (abs)        000
__size_of_setPixelAddrTo0      (abs)        000
__size_of_wait_ms              (abs)        000
__size_of_wait_us              (abs)        000
_clearScreen                   text12       2E2
_getbyte                       text9        2D4
_gethex                        text10       239
_init                          text6        1FE
_init_OLED                     text3        01B
_last_R7_resp                  bssBANK0     035
_main                          maintext     157
_recv_char                     text11       30E
_send_char                     text8        2F8
_send_nl                       text7        314
_setPixelAddr                  text2        2A9
_setPixelAddrTo0               text1        308
_sys_cnt                       bssCOMMON    077
_tmpg                          bssCOMMON    078
_wait_ms                       text4        291
_wait_us                       text5        2C0
btemp                          (abs)        07E
clear_ram0                     clrtext      2F0
end_of_initialization          cinit        019
getbyte@tmp                    cstackBANK0  021
interrupt_function             intentry     004
intlevel0                      functab      000
intlevel1                      functab      000
intlevel2                      functab      000
intlevel3                      functab      000
intlevel4                      functab      000
intlevel5                      functab      000
ltemp                          (abs)        07E
ltemp0                         (abs)        07E
ltemp1                         (abs)        082
ltemp2                         (abs)        086
ltemp3                         (abs)        080
main@a                         cstackBANK0  029
main@command                   cstackBANK0  02C
main@i                         cstackBANK0  02A
reset_vec                      reset_vec    000
saved_w                        (abs)        07E
send_char@c                    cstackCOMMON 075
setPixelAddr@col               cstackBANK0  021
setPixelAddr@row               cstackBANK0  020
stackhi                        (abs)        000
stacklo                        (abs)        000
start                          init         010
start_initialization           cinit        011
ttemp                          (abs)        07E
ttemp0                         (abs)        07E
ttemp1                         (abs)        081
ttemp2                         (abs)        084
ttemp3                         (abs)        087
ttemp4                         (abs)        07F
wait_ms@i                      cstackBANK0  024
wait_ms@t                      cstackBANK0  026
wait_us@i                      cstackBANK0  020
wait_us@t                      cstackBANK0  022
wtemp                          (abs)        07E
wtemp0                         (abs)        07E
wtemp1                         (abs)        080
wtemp2                         (abs)        082
wtemp3                         (abs)        084
wtemp4                         (abs)        086
wtemp5                         (abs)        088
wtemp6                         (abs)        07F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 26 in file "Sources/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               2   10[BANK0 ] int 
  command         1   12[BANK0 ] unsigned char 
  a               1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2  209[None  ] int 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       4       0
      Temps:          0       1       0
      Totals:         0       5       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_OLED_spi_sendchar
		_clearScreen
		_getbyte
		_init
		_init_OLED
		_send_char
		_send_nl
		_setPixelAddrTo0
		_wait_ms
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setPixelAddrTo0 *****************
 Defined at:
		line 222 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_setPixelAddr
 This function is called by:
		_main
		_writePixel
		_writePixels
 This function uses a non-reentrant model


 *************** function _setPixelAddr *****************
 Defined at:
		line 211 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
  col             1    wreg     unsigned char 
  row             1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  col             1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       1       0
      Locals:         0       1       0
      Temps:          0       0       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_OLED_spi_sendchar
 This function is called by:
		_setPixelAddrTo0
 This function uses a non-reentrant model


 *************** function _init_OLED *****************
 Defined at:
		line 11 in file "Sources/OLED_power_on.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_OLED_spi_sendchar
		_send_char
		_send_nl
		_wait_ms
		_wait_us
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _wait_ms *****************
 Defined at:
		line 113 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
  i               2    4[BANK0 ] unsigned short 
 Auto vars:     Size  Location     Type
  t               2    6[BANK0 ] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       2       0
      Temps:          0       0       0
      Totals:         0       4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_wait_us
 This function is called by:
		_main
		_init_OLED
		_drawLine
		_drawRect
 This function uses a non-reentrant model


 *************** function _wait_us *****************
 Defined at:
		line 100 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
  i               2    0[BANK0 ] unsigned short 
 Auto vars:     Size  Location     Type
  t               2    2[BANK0 ] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       2       0
      Locals:         0       2       0
      Temps:          0       0       0
      Totals:         0       4       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_wait_ms
		_init_OLED
 This function uses a non-reentrant model


 *************** function _init *****************
 Defined at:
		line 137 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       1       0
      Totals:         0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_send_char
		_send_nl
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _send_nl *****************
 Defined at:
		line 36 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_send_char
 This function is called by:
		_main
		_init
		_init_OLED
 This function uses a non-reentrant model


 *************** function _send_char *****************
 Defined at:
		line 16 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          0       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_send_nl
		_init
		_init_OLED
 This function uses a non-reentrant model


 *************** function _getbyte *****************
 Defined at:
		line 54 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  tmp             1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       1       0
      Temps:          0       1       0
      Totals:         0       2       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_gethex
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _gethex *****************
 Defined at:
		line 42 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          1       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_recv_char
 This function is called by:
		_getbyte
 This function uses a non-reentrant model


 *************** function _recv_char *****************
 Defined at:
		line 10 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_gethex
		_waitnl
 This function uses a non-reentrant model


 *************** function _clearScreen *****************
 Defined at:
		line 167 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_OLED_spi_sendchar
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _OLED_spi_sendchar *****************
 Defined at:
		line 78 in file "Sources/OLED_functions.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    5[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         1       0       0
      Temps:          0       0       0
      Totals:         1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
		_clearScreen
		_setPixelAddr
		_init_OLED
		_drawLine
		_drawRect
		_writePixel
		_writePixels
 This function uses a non-reentrant model


 *************** function _IT *****************
 Defined at:
		line 10 in file "Sources/main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          5       0       0
      Totals:         5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
Sources/main.c
		_main          		CODE           	0157	0000	168
		_IT            		CODE           	0266	0000	44

Sources/main.c estimated size: 212

shared
		__initialization		CODE           	0011	0000	9

shared estimated size: 9

Sources/OLED_functions.c
		_init          		CODE           	01FE	0000	60
		_setPixelAddr  		CODE           	02A9	0000	24
		_send_nl       		CODE           	0314	0000	6
		_clearScreen   		CODE           	02E2	0000	15
		_setPixelAddrTo0		CODE           	0308	0000	7
		_OLED_spi_sendchar		CODE           	0300	0000	9
		_wait_us       		CODE           	02C0	0000	21
		_send_char     		CODE           	02F8	0000	9
		_recv_char     		CODE           	030E	0000	7
		_wait_ms       		CODE           	0291	0000	25
		_gethex        		CODE           	0239	0000	46
		_getbyte       		CODE           	02D4	0000	15

Sources/OLED_functions.c estimated size: 244

Sources/OLED_power_on.c
		_init_OLED     		CODE           	001B	0000	317

Sources/OLED_power_on.c estimated size: 317

